import React, { useState, useEffect, useRef } from 'react';
import DropdownMenu from './components/DropdownMenu';
import GenerateSongButton from './components/GenerateSongButton';
import RefreshInputMenusButton from './components/RefreshInputMenusButton';
import ResubmitPromptButton from './components/ResubmitPromptButton';
import './App.css';


const App: React.FC = () => {
  const [mood, setMood] = useState<string>('');
  const [tempo, setTempo] = useState<string>('');
  const [genre, setGenre] = useState<string>('');
  const [songUrl, setSongUrl] = useState<string>('');
  const [songName, setSongName] = useState<string>('');
  const [isLoading, setIsLoading] = useState<boolean>(false);


  const audioRef = useRef<HTMLAudioElement>(null);

  useEffect(() => {
    if (audioRef.current) {
      audioRef.current.load();
    }
  }, [songUrl]);

  return (
    <div>
      <h1 className="title">AutomatedGroove</h1>
      <br />
      <br />
      <section>
        <pre>High-quality license- and royalty-free grooves
        for all you music needs</pre>
        <p>Generated by AI</p>
        <p>Certified groovy by you.</p>
      </section>
      <section>
        <p>Are you ready? Let's groove.</p>
        <DropdownMenu placeholder="Genre" options={["rock", "pop", "edm", "hiphop", "country"]} selectedOption={genre} onSelect={setGenre} />
        <DropdownMenu placeholder="Tempo" options={["slow", "medium", "fast"]} selectedOption={tempo} onSelect={setTempo} />
        <DropdownMenu placeholder="Mood" options={["happy", "sad", "angry", "romantic", "euphoric"]} selectedOption={mood} onSelect={setMood} />
        <div>
          <GenerateSongButton
            genre={genre}
            mood={mood}
            tempo={tempo}
            setSongUrl={setSongUrl}
            setSongName={setSongName}
            isLoading={isLoading}
            setIsLoading={setIsLoading}/>
            <p>Select genre, tempo, and mood to generate song</p>
        </div>
      </section>
      <section>
        <div>
          <>Finding the groove...</>
          {isLoading ?
          <img className="loadingGif" src='/assets/giphy1.gif' />
          : songName}
        </div>
      </section>
      <section>
        <p>Get into your groove!</p>
        <div>
          <audio ref={audioRef} src={songUrl} controls data-testid="audio-player"/>
        </div>
      </section>
      <section>
        <p>Here we groove again!</p>
        <ResubmitPromptButton
          genre={genre}
          mood={mood}
          tempo={tempo}
          setSongUrl={setSongUrl}
          setSongName={setSongName}
          isLoading={isLoading}
          setIsLoading={setIsLoading}/>
        <RefreshInputMenusButton
          setMood={setMood}
          setTempo={setTempo}
          setGenre={setGenre}
          setSongUrl={setSongUrl}
          setSongName={setSongName}
          setIsLoading={setIsLoading}/>
      </section>
      <section>
        <div>
          <p>FAQs</p>
          <p>Have a different question? Groovy. Get in touch.</p>
        </div>
      </section>
      <section>
        <div>
          <p>The AutomatedGroove Group</p>
        </div>
      </section>
    </div>
  );
};

export default App;
