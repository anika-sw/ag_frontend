import React, { useState, useEffect, useRef } from 'react';
import LogoBar from './components/LogoBar';
import DropdownMenu from './components/DropdownMenu';
import GenerateSongButton from './components/GenerateSongButton';
import RefreshInputMenusButton from './components/RefreshInputMenusButton';
import ResubmitPromptButton from './components/ResubmitPromptButton';
import './App.css';

const App: React.FC = () => {
  const [mood, setMood] = useState<string>('');
  const [tempo, setTempo] = useState<string>('');
  const [genre, setGenre] = useState<string>('');
  const [songUrl, setSongUrl] = useState<string>('');
  const [songName, setSongName] = useState<string>('');
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [songGenerated, setSongGenerated] = useState<boolean>(false);

  const landingPageRef = useRef<HTMLDivElement>(null);
  const audioRef = useRef<HTMLAudioElement>(null);

  useEffect(() => {
    if (audioRef.current) {
      audioRef.current.load();
    }
  }, [songUrl]);

  useEffect(() => {
    if (landingPageRef.current) {
      const landingPage = landingPageRef.current;
      const logoBar = landingPage.querySelector('.logo-container');
      const landingPageText = landingPage.querySelector('.landing-page-text');

      if (logoBar && landingPageText) {
        const totalHeight = logoBar.clientHeight + landingPageText.clientHeight;
        landingPage.style.height = `${totalHeight}px`;
      }
    }
  }, []);

  const scrollFunction = () => {
    const title: HTMLElement | null = document.getElementById('title');
    if (title) {
      if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {
        title.style.fontSize = "2.5rem";
        title.style.height = '10vh';
      } else {
        title.style.fontSize = "7rem";
        title.style.height = '30vh';
      }
    }
  };

// useEffect added to handle correct title display on page load and scroll
  useEffect(() => {
    const title = document.getElementById('title');

    // Disable transitions initially
    if (title) {
      title.classList.add('no-transition');
    }

    // Initialize title size on page load
    scrollFunction();

    // Re-enable transitions after initial load
    setTimeout(() => {
      if (title) {
        title.classList.remove('no-transition');
      }
    }, 100); // Adjust timing as necessary

    // Attach the scroll event listener
    window.addEventListener('scroll', scrollFunction);

    // Cleanup the event listener on component unmount
    return () => {
      window.removeEventListener('scroll', scrollFunction);
    };
  }, []);

  const scrollToBottom = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {
    event.preventDefault();
    window.scrollTo({
      top: document.documentElement.scrollHeight,
      behavior: 'smooth'
    });
  };

  return (
    <div>
      <div ref={landingPageRef} className="landing-page">
        <video autoPlay muted loop className="background-video">
          <source src="/assets/musicnotes.mp4" type="video/mp4" />
        </video>
        <section className='landing-page-text'>
          <h1 id='title'>AutomatedGroove</h1>
          <div className='intro'>
            <pre className='sm-text'>
              {'High-quality license- and royalty-free grooves\nfor all your music needs'}
            </pre>
            <p className='md-text'>Generated by AI</p>
            <p className='lg-text'>Certified groovy by you.</p>
            <br />
            <br />
            <p className='logo-bar-text'>Use with your favorite platforms. No restrictions. Ever.</p>
            <LogoBar />
          </div>
        </section>
      </div>
      <div className='content'>
        { (!songGenerated && !isLoading) &&
          <section className='make-groove'>
            <h2>Are you ready? Let's groove.</h2>
            <div className='dropdown-container'>
              <DropdownMenu placeholder="Genre" options={["rock", "pop", "edm", "hiphop", "country"]} selectedOption={genre} onSelect={setGenre} />
              <DropdownMenu placeholder="Tempo" options={["slow", "medium", "fast"]} selectedOption={tempo} onSelect={setTempo} />
              <DropdownMenu placeholder="Mood" options={["happy", "sad", "angry", "romantic", "euphoric"]} selectedOption={mood} onSelect={setMood} />
            </div>
            <div>
              <GenerateSongButton
                genre={genre}
                mood={mood}
                tempo={tempo}
                setSongUrl={setSongUrl}
                setSongName={setSongName}
                isLoading={isLoading}
                setIsLoading={setIsLoading}
                setSongGenerated={setSongGenerated}/>
            </div>
          </section>
        }
        {isLoading &&
          <section>
              <h2>Finding the groove...</h2>
              <div>
                <img className="loadingGif" src='/assets/loading.gif' />
              </div>
          </section>
        }
        { songGenerated &&
          <>
            <section className='get-groove-flex'>
              <h2>Get into your groove!</h2>
              <div>
                <audio ref={audioRef} src={songUrl} controls data-testid="audio-player"/>
                <div>{songName}</div>
              </div>
            </section>
            <section>
              <div>
                <div className='groove-again'>
                  <h2>Here we groove again!</h2>
                  <ResubmitPromptButton
                    genre={genre}
                    mood={mood}
                    tempo={tempo}
                    setSongUrl={setSongUrl}
                    setSongName={setSongName}
                    setIsLoading={setIsLoading}
                    setSongGenerated={setSongGenerated}/>
                  <RefreshInputMenusButton
                    setMood={setMood}
                    setTempo={setTempo}
                    setGenre={setGenre}
                    setSongUrl={setSongUrl}
                    setSongName={setSongName}
                    setIsLoading={setIsLoading}
                    setSongGenerated={setSongGenerated}/>
                </div>
              </div>
            </section>
          </>
        }
        <section>
          <div className="faq">
            <h2>FAQs</h2>
            <ul>
              <li>How long are the generated songs?</li>
              <ul><li>15 seconds.</li></ul>
              <li>Can I download my song?</li>
              <ul><li>Yes. Once a song has loaded, click the three vertical dots on the audio player for download option.Yes</li></ul>
              <li>Is this royalty-free music?</li>
              <ul><li>Yes.</li></ul>
              <li>Do I need to credit AutomatedGroove?</li>
              <ul><li>No.</li></ul>
            </ul>
            <p>
              Have a different question? Groovy. <a href="#" onClick={(event) => scrollToBottom(event)} style={{ fontWeight: 'bold' }}>Get in touch.</a>
            </p>

          </div>
        </section>
        <section>
          <div>
            <h2>The AutomatedGroove Group</h2>
            <div className="contact-container">
              <div>
                <img src="/assets/linkedin_kit.png" className="contact"></img>
                <h3>Kit</h3>
                <p>(She/Her)</p>
                <a href='https://www.linkedin.com/in/kit-sutliff/' target="_blank">LinkedIn</a>
              </div>
              <div>
                <img src="/assets/linkedin_sunny.jpeg" className="contact"></img>
                <h3>Sunny</h3>
                <p>(She/Her)</p>
                <a href='https://www.linkedin.com/in/sunny-muniz-4838b8235/' target="_blank">LinkedIn</a>
              </div>
              <div>
                <img src="/assets/linkedin_anika.jpeg" className="contact"></img>
                <h3>Anika</h3>
                <p>(She/Her)</p>
                <a href='http://www.linkedin.com/in/anika-stephen-wilbur' target="_blank">LinkedIn</a>
              </div>
              <div>
                <img src="/assets/linkedin_shelby.jpeg" className="contact"></img>
                <h3>Shelby</h3>
                <p>(She/They)</p>
                <a href='https://www.linkedin.com/in/shelby-willis-57004a234/' target="_blank">LinkedIn</a>
              </div>
            </div>
          </div>
        </section>
      </div>
      <hr></hr>
      <footer className="footer">
        <p>&copy; AutomatedGroove. All rights reserved.</p>
      </footer>
    </div>
  );
};

export default App;
