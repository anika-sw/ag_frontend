import React, { useState, useEffect, useRef } from 'react';
import DropdownMenu from './components/DropdownMenu';
import GenerateSongButton from './components/GenerateSongButton';
import RefreshInputMenusButton from './components/RefreshInputMenusButton';
import ResubmitPromptButton from './components/ResubmitPromptButton';
import ReCAPTCHA from "react-google-recaptcha";
import './App.css';
import { onChange } from '../utils/api';

const App: React.FC = () => {
  const [mood, setMood] = useState<string>('');
  const [tempo, setTempo] = useState<string>('');
  const [genre, setGenre] = useState<string>('');
  const [songUrl, setSongUrl] = useState<string>('');
  const [songName, setSongName] = useState<string>('');
  const [isLoading, setIsLoading] = useState<boolean>(false);


  const siteKey: string = import.meta.env.VITE_RECAPTCHA_SITE_KEY;
  console.log("printing import.meta.env:", import.meta.env);
  console.log("printing siteKey:", siteKey);


  const audioRef = useRef<HTMLAudioElement>(null);

  useEffect(() => {
    if (audioRef.current) {
      audioRef.current.load();
    }
  }, [songUrl]);

  return (
    <div>
      <h1>AutomatedGroove</h1>
      <p>High-quality license- and royalty-free grooves<br /> 
      for all you music needs</p>
      <p>Generated by AI</p>
      <p>Certified groovy by you</p>
      <p>Are you ready? Let's groove.</p>
      <DropdownMenu placeholder="Genre" options={["rock", "pop", "edm", "hiphop", "country"]} selectedOption={genre} onSelect={setGenre} />
      <DropdownMenu placeholder="Tempo" options={["slow", "medium", "fast"]} selectedOption={tempo} onSelect={setTempo} />
      <DropdownMenu placeholder="Mood" options={["happy", "sad", "angry", "romantic", "euphoric"]} selectedOption={mood} onSelect={setMood} />
      <div>
        <GenerateSongButton
          genre={genre}
          mood={mood}
          tempo={tempo}
          setSongUrl={setSongUrl}
          setSongName={setSongName}
          isLoading={isLoading}
          setIsLoading={setIsLoading}/>
        <ReCAPTCHA sitekey={siteKey} onChange={onChange} />
      </div>
      <div>
        {isLoading ? 
        <img className="loadingGif" src='/assets/giphy1.gif' />
        : songName}
      </div>
      <div>
        <audio ref={audioRef} src={songUrl} controls data-testid="audio-player"/>
      </div>
      <ResubmitPromptButton
        genre={genre} 
        mood={mood} 
        tempo={tempo} 
        setSongUrl={setSongUrl} 
        setSongName={setSongName}
        isLoading={isLoading}
        setIsLoading={setIsLoading}/>
      <RefreshInputMenusButton 
        setMood={setMood}
        setTempo={setTempo}
        setGenre={setGenre}
        setSongUrl={setSongUrl}
        setSongName={setSongName}
        setIsLoading={setIsLoading}/>
      <div>
        <p>FAQs</p>
        <p>Have a different question? Groovy. Get in touch</p>
      </div>
      <div>
        <p>The Automated Groove Group</p>
      </div>
    </div>
  );
};

export default App;
